BaseController - CI4:

public function ImageResizeWithCrop($width, $height, $thumbImage, $savePath) {
        $thumb_file = $savePath . $thumbImage;
        $newimgPath =  $savePath . $thumbImage;
        // echo $newimgPath; die;
        /* Get original image x y*/
        list($w, $h) = getimagesize($thumb_file);
        $actualW = $w;
        $actualH = $h;
        $size = getimagesize($thumb_file);
        /* calculate new image size with ratio */
        $ratio = max($width / $w, $height / $h);
        $h = ceil($height / $ratio);
        $x = ($w - $width / $ratio) / 2;
        $w = ceil($width / $ratio);
        if ($actualH >= $h) $y = ($actualH - $h) / 2;
        /* new file name */
        $path = $savePath . $thumbImage;
        /* read binary data from image file */
        $imgString = file_get_contents($newimgPath);
        /* create image from string */
        $image = imagecreatefromstring($imgString);
        $tmp = imagecreatetruecolor($width, $height);
        $color = imagecolorallocatealpha($tmp, 0, 0, 0, 127); //fill transparent back
        imagefill($tmp, 0, 0, $color);
        imagesavealpha($tmp, true);
        imagecopyresampled($tmp, $image, 0, 0, $x, $y, $width, $height, $w, $h);
        /* Save image */
        switch ($size["mime"]) {
            case 'image/jpeg':
                imagejpeg($tmp, $path, 100);
            break;
            case 'image/png':
                imagepng($tmp, $path, 0);
            break;
            case 'image/gif':
                imagegif($tmp, $path);
            break;
            default:
                exit;
            break;
        }
        return $path;
        /* cleanup memory */
        imagedestroy($image);
        imagedestroy($tmp);
    }
